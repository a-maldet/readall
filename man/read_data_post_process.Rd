% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_data.R
\name{read_data_post_process}
\alias{read_data_post_process}
\alias{rename_cols_}
\alias{retype_cols_}
\alias{add_extra_cols_}
\alias{apply_to_lower_}
\alias{compare_col_names_}
\alias{compare_col_types_}
\alias{apply_cols_keep_}
\alias{add_meta_}
\title{Helper function for \code{\link[=read_data]{read_data()}}: Do all post processing}
\usage{
read_data_post_process(data, file_definition, err_h)

rename_cols_(
  data,
  file_definition,
  err_h = composerr("Error while calling 'rename_cols_()'")
)

retype_cols_(
  data,
  file_definition,
  err_h = composerr("Error while calling 'retype_cols_()'")
)

add_extra_cols_(
  data,
  file_definition,
  err_h = composerr("Error while calling 'add_extra_cols_()'")
)

apply_to_lower_(
  data,
  file_definition,
  err_h = composerr("Error while calling 'apply_to_lower_()'")
)

compare_col_names_(
  data,
  file_definition,
  err_h = composerr("Error while calling 'compare_col_names_()'")
)

compare_col_types_(
  data,
  file_definition,
  err_h = composerr("Error while calling 'compare_col_types_()'")
)

apply_cols_keep_(
  data,
  file_definition,
  err_h = composerr("Error while calling 'apply_cols_keep_()'")
)

add_meta_(
  data,
  file_definition,
  err_h = composerr("Error while calling 'add_meta_()'")
)
}
\arguments{
\item{data}{The data.frame, which should be modified}

\item{file_definition}{A \link[=new_file_definition]{file_definition} class object, holding the file
information of the data file.}

\item{err_h}{An error handler.}
}
\value{
The modified data.frame
}
\description{
After reading a data file the following functions will be executed:
\itemize{
\item \code{\link[=retype_cols_]{retype_cols_()}}: If the \code{retype_cols} argument in the \link[=new_file_definition]{file_definition}
class object is set to \code{TRUE} and the \code{col_types} argument is not empty,
then the data types of the columns in the read data set
will be transformed to the data types given in the \code{col_types} argument.
\item \code{\link[=rename_cols_]{rename_cols_()}}: If the \code{rename_cols} argument in the \link[=new_file_definition]{file_definition}
class object is set to \code{TRUE} and the \code{col_names} argument is not empty,
then the column names of the read data set
will be overwritten by the values in the \code{col_names} argument.
\item \code{\link[=apply_to_lower_]{apply_to_lower_()}}: If the \code{to_lower} argument in the \link[=new_file_definition]{file_definition}
class object is set to \code{TRUE}, then the column names of the read data set
will be transformed to lower case.
\item \code{\link[=compare_col_names_]{compare_col_names_()}}: If the \code{col_names} are given in the
[file_definition][new_file_definition())] class object and the header row was used as well
(for SAS-files always, or for DSV- and EXCEL-files when \code{header = TRUE}),
then the column names read by [read_data()] will be compared with the given
\code{col_names}. In case of differences, a warning will be printed.
\item [compare_col_types_()]: If the \code{col_types} are given in the
[file_definition][new_file_definition())] class object, then the data types in the data
columns read by [read_data()] will be compared with the given
\code{col_types}. In case of differences, a warning will be printed.
\item [add_meta_()]: The meta data of each column (defined in
\code{file_definition$file_meta}) will be added as an attribute to each data.frame column.
\item [apply_adapters_()]: Apply all adapters stored in the \code{adapters} attribute of
the \code{file_definition} class object on the data set.
\item [apply_cols_keep_()]: Only keep the columns defined in the \code{cols_keep}
attribute of the \code{file_definition} class object.
If \code{file_definition$cols_keep} is not \code{NULL} only the columns with the column names
given in \code{file_definition$keep_cols} are kept.
\item [add_extra_cols_()]: As defined in the \verb{extra_cols_*} attributes
of the \code{file_definition} class object, add additional columns.
\itemize{
\item If \code{file_definition$extra_col_name} is not \code{NULL}, then this value will be used as
a column name and the value stored in \code{file_definition$extra_col_val} will be used
as column value.
\item If \code{file_definition$extra_col_file_path} is not \code{NULL}, then this value will be used
as column name and the value \code{file_definition$file_path} will be used as column
value.
}
}

[new_file_definition())]: R:new_file_definition())
[read_data()]: R:read_data()
[compare_col_types_()]: R:compare_col_types_()
[new_file_definition())]: R:new_file_definition())
[read_data()]: R:read_data()
[add_meta_()]: R:add_meta_()
[apply_adapters_()]: R:apply_adapters_()
[apply_cols_keep_()]: R:apply_cols_keep_()
[add_extra_cols_()]: R:add_extra_cols_()
}
