% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/file_definition.R
\name{new_file_definition_sas_}
\alias{new_file_definition_sas_}
\title{Helper function for \code{new_file_definition_sas()}}
\usage{
new_file_definition_sas_(
  file_path,
  specification_files = NULL,
  file_meta = NULL,
  skip_rows,
  n_max,
  encoding = NULL,
  to_lower,
  rename_cols,
  retype_cols,
  adapters = new_adapters(),
  cols_keep,
  extra_col_name = NULL,
  extra_col_val = NULL,
  extra_col_file_path,
  err_h,
  ...
)
}
\arguments{
\item{file_path}{A string holding the path to the data file.}

\item{specification_files}{An optional character vector holding the paths
to the files, where the file structure is described.}

\item{file_meta}{An optional \link[=new_file_meta]{file_meta} class object,
holding some meta information for each data column
(column description, possible column values + descriptions of possible
column values).
For details see section \strong{meta information}.
If the argument \code{cols} is not \code{NULL}, then the argument \code{file_meta}
must be omitted.}

\item{skip_rows}{The number of rows to be skipped. In the case of DSV or
EXCEL files: If the argument \code{header} is set to \code{TRUE}, then the
first row is always assumed to be the header row.}

\item{n_max}{A number, defining the maximum number of rows to be
read. If \code{n_max = Inf}, then  all available rows will be read.}

\item{encoding}{A string, defining which encoding should be assumed when
reading the data file. The following valuels are allowed:
\itemize{
\item \code{"UTF-8"}: For \emph{UTF-8} encoded files.
\item \code{"latin1"}: For \emph{ISO 8859-1} (also called \emph{Latin-1}) encoded files.
This encoding is almost the same as \emph{Windows-1252} (also called \emph{ANSI}).
They differ only in 32 symbol codes (special symbols that are rarely
used). In the case of SAS files, it is possible to set \code{encoding = NULL}.
In this case, the encoding defined in the SAS data file header
will be used.
}}

\item{to_lower}{A logical flag, defining if the names of the columns should
be transformed to lower case after reading the data set (by calling
\code{\link[=read_data]{read_data()}}). This transformation will be applied before comparing the
column names (in the case of SAS-Files or DSV- and EXCE-Files with
\code{header = TRUE}).
In the case of \code{new_file_definition()} the \code{to_lower} argument
overwrites the \code{to_lower} argument in the
\link[=new_file_structure_fwf]{file_structure} class object given in
\code{file_structure}. If \code{to_lower} is omitted, then the \code{file_structure}
class object remains unchanged.
In the case of \code{new_file_definition_fwf()}, \code{new_file_definition_dsv()}, \code{new_file_definition_excel()}
or \code{new_file_definition_sas()} the argument \code{to_lower} must either be \code{TRUE}
or \code{FALSE}.}

\item{rename_cols}{A logical value, which defines if the columns given in
the data file should be overwritten by the columns given in argument
\code{col_names}. If \code{col_names} is not given, then \code{rename_cols} has no
effect.}

\item{retype_cols}{A logical value, which defines if the types of the
columns given in SAS file changed to the types given in the
\code{col_types} argument. If \code{col_types} is not given, then \code{retype_cols} has no
effect.}

\item{adapters}{An optional list argument, holding a list of adapter functions
(See section \emph{adapters}).}

\item{cols_keep}{Either \code{TRUE} or a character vector.
If set to \code{TRUE}, then all columns of the data
are kept when calling \code{\link[=read_data]{read_data()}}.
If \code{cols_keep} character vector, then the values in \code{cols_keep} represent
the names of the columns, which are kept  when calling \code{\link[=read_data]{read_data()}}.}

\item{extra_col_name}{An optional string, which defines the column, which
will be added to the data set (after reading it with function \code{\link[=read_data]{read_data()}}).
Each entry of the column will have the single value given in \code{extra_col_val}.
For example: This column is useful when reading similar data files for
separate years (one could pass the current data set year to \code{extra_col_name}
and set \code{extra_col_name = "year"}).
If \code{extra_col_name} is omitted, no column will be added to the data set and
then \code{extra_col_val} must be omitted as well.
additional column with the column name, given in  \code{extra_col_name}.
If omitted, then no column will be added to the data set and the
argument \code{extra_col_name} must be omitted as well.}

\item{extra_col_val}{An optional value (any atomic type), which will be added
(after reading the data set with function \code{\link[=read_data]{read_data()}}) as an
additional column with the column name, given in  \code{extra_col_name}.
For example: This column is useful when reading similar data files for
separate years (one could pass the current data set year to \code{extra_col_name}
and set \code{extra_col_name = "year"}).
If omitted, then no column will be added to the data set and the
argument \code{extra_col_name} must be omitted as well.}

\item{extra_col_file_path}{Either \code{FALSE} or a string.
If set to \code{FALSE} no file-path-column will be added to the data set, when
calling \code{\link[=read_data]{read_data()}}.
If the argument \code{extra_col_file_path} is a string, then a column holding
the file path of the data file will be added to the read data set, when
calling \code{\link[=read_data]{read_data()}}. The string of \code{extra_col_file_path} will be used
as column name for this additional column.}

\item{err_h}{An error handler}

\item{...}{Additional function arguments for
\itemize{
\item \code{\link[readr:read_fwf]{readr::read_fwf()}} in case of FWF files
\item \code{\link[utils:read.table]{utils::read.delim()}} in case of DSV files
\item \code{\link[readxl:read_excel]{readxl::read_excel()}} in case of EXCEL files
}}
}
\description{
Helper function for \code{new_file_definition_sas()}
}
